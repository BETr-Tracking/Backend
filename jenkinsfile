pipeline {
    environment {
        docker_image = ""
        DOCKERHUB_CREDENTIALS = credentials('DockerHubCred')
    } 
    agent any

    stages {
        stage('1. Git Clone') {
            steps {
                script {
                    git branch: 'main', url: "https://github.com/BETr-Tracking/Backend.git"
                    dir('Frontend') {
                        git branch: 'main', url: "https://github.com/BETr-Tracking/Frontend.git"
                    }
                }
            }
        }
        stage('2. Maven Build') {
            steps {
                sh 'mvn clean install'
            }
        }
        stage('3. Build and Push Docker Images') {
            steps {
                script {
                    sh 'docker build -t svp3012/betr-backend .'
                    sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                    sh 'docker push svp3012/betr-backend'
                    dir('Frontend') {
                        sh 'docker build --build-arg REACT_APP_API_URL=https://api.example.com --build-arg REACT_APP_DEBUG=true -t svp3012/betr-frontend-app .'
                        sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                        sh 'docker push svp3012/betr-frontend-app'
                    }
                }
            }
        }
        stage('4. Cleanup Docker Images') {
            steps {
                script {
                    sh '''
                        # Stop any running containers of our project
                        docker ps -q --filter "ancestor=svp3012/betr-backend" | xargs -r docker stop
                        docker ps -q --filter "ancestor=svp3012/betr-frontend-app" | xargs -r docker stop

                        # Remove all stopped containers
                        docker container prune -f

                        # Remove images matching the project name, excluding the ones with tags
                        docker images -q svp3012/betr-backend | xargs -r docker rmi -f
                        docker images -q svp3012/betr-frontend-app | xargs -r docker rmi -f

                        # Remove dangling images
                        docker images -f "dangling=true" -q | xargs -r docker rmi
                    '''
                }
            }
        }
        stage('5. Run Ansible Playbook') {
            steps {
                script {
                    dir(''){
                        sh '''
                                export LANG=en_US.UTF-8
                                export LANGUAGE=en_US:en
                                export LC_ALL=en_US.UTF-8
                                ansible-playbook -i inventory deploy.yml
                            '''
                    }
                }
            }
        }
    }
    post {
            always {
                sh 'docker logout'
            }
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '15'))
    }

}


